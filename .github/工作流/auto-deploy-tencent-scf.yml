# https://github.com/June1991/serverless-express

name: auto-deploy-tencent-scf

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * 1,3,5" # 每周一、三、五的10点

env:
  IsAutoDeployTencentScf: ${{ secrets.IS_AUTO_DEPLOY_TENCENT_SCF }} # 是否开启自动部署云函数

jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.check.outputs.result }} # 不能直接传递secrets的值，否则会被skip，需要转一下
    steps:
      - id: check
        run: |
          [ ${{ github.event_name }} == 'workflow_dispatch' -o true == "${{ env.IsAutoDeployTencentScf }}" ] && echo "::set-output name=result::开启" || echo "::set-output name=result::关闭"

  deploy:
    name: deploy serverless
    runs-on: ubuntu-latest
    needs: pre-check
    # if: env.IsAutoDeployTencentScf=='true' # 这里job.if读取不到env或secrets，很坑...但是发现可以读到needs的outputs值
    if: needs.pre-check.outputs.result=='开启'
    steps:
      - name: clone local repository
        uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14.x
      - name: install serverless
        run: npm install -g serverless
      - name: deploy serverless
        run: |
          cd ./tencentScf
          echo "开始配置云函数："
          echo "$Tencent_Serverless_Yml"
          [ -z "$Tencent_Serverless_Yml" ] && echo "未配置serverless.yml，使用默认值" || echo "$Tencent_Serverless_Yml" > serverless.yml
          echo "开始发布项目"
          chmod +x publish.sh
          ./publish.sh
          echo "开始部署到云函数"
          sls deploy --force
        env: # 环境变量
          STAGE: dev #您的部署环境
          SERVERLESS_PLATFORM_VENDOR: tencent # serverless海外默认为aws部署，配置为腾讯部署
          TENCENT_SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }} # AKIDDF2YnmUw83h5C2bue6HCqDJ9i01lEQN3
          TENCENT_SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }} # RbU5QUGlzx3sQhhQs4ybx1oKZXF4C4i5
          Tencent_Serverless_Yml: ${{ secrets.TENCENT_SERVERLESS_YML }} # # https://github.com/serverless-components/tencent-scf/blob/master/docs/configure.md

#组件信息
component: scf
name: bilibili_tool

#组件参数配置
inputs:
  name: ${name}_scf
  namespace: default
  enableRoleAuth: false
  src: ./bin/publish/
  handler: index.main_handler
  runtime: CustomRuntime
  region: ap-guangzhou # 函数所在区域，默认广州
  description: This is a function in ${app} application.
  memorySize: 128
  initTimeout: 30
  timeout: 86400
  asyncRunEnable: true
  traceEnable: true
  events: # 根据自己的需要修改
    - timer: # 每日任务触发器
        parameters:
          name: DailyTask
          cronExpression: "0 30 12 * * * *"
          enable: true
          argument: Daily
    - timer: # 天选抽奖触发器
        parameters:
          name: LiveLotteryTask
          cronExpression: "0 0 */4 * * * *"
          enable: true
          argument: LiveLottery
    - timer: # 自动取关
        parameters:
          name: UnfollowBatchedTask
          cronExpression: "0 0 0 * * MON *"
          enable: true
          argument: UnfollowBatched
  environment:
    variables: # 根据自己的需要修改
      Ray_BiliBiliCookies__1: 123 # buvid3=35D2DA06-EAE5-EFDF-FB58-FF58C0AF44E060756infoc; _uuid=8E5A3AA9-4C101-10B27-3B38-58AFA5BBB1AF04662infoc; buvid4=911DFD01-270F-2040-03B5-2FC3BC11F7E514373-022072708-lYxG/cxjqwMqUwi6Zgu8KNSVKFeBCFKTdw3nNIaXQi60oVyipb9QLQ==; rpdid=0zbfVG66em|2RT1CmgU|1zw|3w1OguZy; i-wanna-go-back=-1; fingerprint=e53ec56ce1277b7c08b08cd8542afaba; buvid_fp_plain=undefined; DedeUserID=172238510; DedeUserID__ckMd5=9f8b3a06c1a45d14; SESSDATA=862eb5b8,1674434170,b6719*71; bili_jct=b821e280ecac4df5762fa9f5c3199e48; buvid_fp=e53ec56ce1277b7c08b08cd8542afaba; b_ut=5; CURRENT_BLACKGAP=0; blackside_state=0; CURRENT_QUALITY=80; PVID=1; LIVE_BUVID=AUTO1716591700341083; bp_video_offset_172238510=688626460360966100; innersign=0; b_lsid=C3F5E66F_1829B19DAEA; b_timer={"ffp":{"333.1007.fp.risk_35D2DA06":"1829B19E033","333.1193.fp.risk_35D2DA06":"1829B4BCC40"}}; CURRENT_FNVAL=16; sid=59pt8efl
